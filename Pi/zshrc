# smittytone's zsh profile (Pi)
#
# 1.3.0

# Options
setopt AUTO_CD
setopt CORRECT
unsetopt NOMATCH


# History
HISTFILE=~/.zsh_history
HISTSIZE=100
SAVEHIST=100


# Autocompletion
autoload -Uz compinit
compinit


# Prompts...
# ...left-hand side
PROMPT='%F{magenta}%d >%f %F{green}'

# ...right-hand side: use for Git repos
# FROM 1.0.2 - use a git check to show status as well as repo namw
git_prompt() {
    is_dirty() {
        test -n "$(git status --porcelain --ignore-submodules)"
    }
    vcs_info
    local ref="$vcs_info_msg_0_"
    if [[ -n "$ref" ]]; then
        # FROM 1.3.0 -- use symbols for repo state
        local symbol=$'\UF7E9'
        local unmerged=$(git status)
        unmerged=$(grep 'is ahead' < <((echo -e "$unmerged")))
        if [[ -n "$unmerged" ]]; then
            symbol=$'\U1F7E5'
        fi
        if is_dirty; then
            symbol=$'\U1F7E8'
        fi
        RPROMPT="%F{cyan}[${ref}]%f ${symbol}"
    else
        RPROMPT=''
    fi
}

setopt prompt_subst
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
add-zsh-hook precmd git_prompt
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes false
zstyle ':vcs_info:git*' formats '%b'

# ...input prompt
PS2="%_ ... "

# Aliases...
# ...list operations
alias ls='ls -l --group-directories-first --color=auto'
alias la='LC_COLLATE=C ls -lah --group-directories-first --color=auto'

# ...shutdown and restart
alias sd='sudo shutdown -h now'
alias rs='sudo shutdown -r now'

# ...tools
alias python='python3'


# List operation colour scheme
export LS_COLORS="$LS_COLORS:di=1;36:ln=0;93:ex=1;35"


# Path variables...
# ...Git repos
export GIT="$HOME/GitHub"
export SCRIPTS="$GIT/scripts"
export PATH="$HOME/bin:$SCRIPTS:$PATH"


# Functions...
# ...single command Git push
gitsync() {
    git add .
    git commit -m "$1"
    git push
}

# FROM 1.2.0
# Convenience functions for generating certain (.md, .zsh) file types
mdfile() {
    [[ ! -e untitled.md ]] && touch untitled.md
}

zfile() {
    [[ ! -e untitled.zsh ]] && echo "#!/bin/zsh\n\n#\n# Version x.y.x\n" > untitled.zsh
}


# Display which shell is use
echo "Running Shell from $SHELL"
