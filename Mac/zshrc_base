# smittytone's zsh profile (Mac)
#
# Version 1.7.0

# Options
setopt AUTO_CD
setopt CORRECT
unsetopt NOMATCH

# History
HISTFILE=~/.zsh_history
HISTSIZE=100
SAVEHIST=100

# Autocompletion...
autoload -Uz compinit
compinit

# ...add case-insensitive path-completion for macOS
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'

# Prompts...
# ...left-hand side
PROMPT='%F{13}%d >%f '

# ...right-hand side: use for Git repos
# FROM 1.0.5 - use a git check to show status as well as repo namw
git_prompt() {
    is_dirty() {
        test -n "$(git status --porcelain --ignore-submodules)"
    }
    vcs_info
    local ref="$vcs_info_msg_0_"
    if [[ -n "$ref" ]]; then
        local colour="%F{green}"
        # FROM 1.5.2 -- Colour for repos with unmerged commits or uncommitted files
        local unmerged=$(git status --ignore-submodules)
        unmerged=$(grep 'is ahead' < <((echo -e "$unmerged")))
        if [[ -n "$unmerged" ]]; then
            colour="%F{yellow}"
        fi
        if is_dirty; then
            colour="%F{red}"
        fi
        RPROMPT="%F{cyan}[ ${colour}${ref}%F{cyan} ]%f"
    else
        RPROMPT=''
    fi
}

setopt prompt_subst
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
add-zsh-hook precmd git_prompt
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes false
zstyle ':vcs_info:*' formats %b

# ...input prompt
PS2="%_... "

# Aliases...
# ...list operations
alias ls='gls -lhF --group-directories-first --color'
alias la='gls -lahF --group-directories-first --color'
alias lx='/bin/ls -la@'

# ...tools
alias python='python3'

# Exports...
# List operation colour scheme
export LS_COLORS="$LS_COLORS:di=1;36:ln=0;93:ex=1;35"

# Path variables...
# ...Git repos
export GIT="$HOME/GitHub"
export SCRIPTS="$GIT/scripts"
export PATH="$SCRIPTS:$PATH"

# FROM 1.6.6
# Brew
export HOMEBREW_NO_INSTALL_CLEANUP=1

# FROM 1.6.0
# Handle platfoms
CPU=$(uname -p)
if [[ "$CPU" == "arm" ]]; then
    export PATH="/opt/homebrew/bin:$PATH"
    export EDITOR=/opt/homebrew/bin/nano
    alias nano=/opt/homebrew/bin/nano
    alias oldbrew=/usr/local/bin/brew
else
    export PATH="/usr/local/bin:$PATH"
    export EDITOR=/usr/local/bin/nano
    alias nano=/usr/local/bin/nano
fi

# Functions...
# ...single command Git push
# FROM 1.3.2 -- support empty messages
gitsync() {
    if [[ -z "$1" ]]; then
        msg="Latest upload @ $(date)"
    else
        msg="$1"
    fi
    git add .
    git commit -m "$msg"
    git push
}

# FROM 1.4.0 -- add function
# FROM 1.6.7 -- support multiple devices
dlist() {
    local devices=($(/bin/ls /dev/cu.usb* 2>/dev/null))
    if [ ${#devices} -gt 0 ]; then
        if [[ ${#devices} -eq 1 ]]; then
            echo $devices
        else
            local count=1
            for device in $devices; do
                if [[ -n "$1" && "$1" == "$count" ]]; then
                    echo $device
                elif [[ -z "$1" ]]; then
                    echo "$count. $device"
                fi
                ((count+=1))
            done
        fi
    fi
}

# FROM 1.6.1
# Autoload useful ZSH functions
autoload zmv

# Place for non-repo env vars
if [[ -e ~/.ts_exports ]]; then
    source ~/.ts_exports
fi

# Display which shell is use
echo "Running Shell from $SHELL"
