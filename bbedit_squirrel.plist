<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BBEditDocumentType</key>
	<string>CodelessLanguageModule</string>
	<key>BBLMCanSpellCheckCodeRuns</key>
	<false/>
	<key>BBLMColorsSyntax</key>
	<true/>
	<key>BBLMCommentLineDefault</key>
	<string>//</string>
	<key>BBLMCommentPrefixDefault</key>
	<string>/*</string>
	<key>BBLMCommentSuffixDefault</key>
	<string>*/</string>
	<key>BBLMIsCaseSensitive</key>
	<true/>
	<key>BBLMKeywordList</key>
	<array>
		<string>!</string>
		<string>!=</string>
		<string>[]</string>
		<string>||</string>
		<string>==</string>
		<string>&amp;&amp;</string>
		<string>&lt;=</string>
		<string>=&gt;</string>
		<string>&gt;</string>
		<string>&lt;=&gt;</string>
		<string>+</string>
		<string>+=</string>
		<string>-</string>
		<string>-=</string>
		<string>/</string>
		<string>/=</string>
		<string>*</string>
		<string>%</string>
		<string>%=</string>
		<string>++</string>
		<string>--</string>
		<string>&lt;-</string>
		<string>=</string>
		<string>&amp;</string>
		<string>^</string>
		<string>|</string>
		<string>~</string>
		<string>&gt;&gt;</string>
		<string>&gt;&gt;&gt;</string>
		<string>&lt;&lt;</string>
		<string>{}</string>
		<string>::</string>
		<string>#require</string>
		<string>array</string>
		<string>base</string>
		<string>blob</string>
		<string>break</string>
		<string>case</string>
		<string>catch</string>
		<string>class</string>
		<string>clone</string>
		<string>const</string>
		<string>constructor</string>
		<string>continue</string>
		<string>default</string>
		<string>delete</string>
		<string>do</string>
		<string>else</string>
		<string>enum</string>
		<string>extends</string>
		<string>false</string>
		<string>for</string>
		<string>foreach</string>
		<string>function</string>
		<string>if</string>
		<string>in</string>
		<string>instanceof</string>
		<string>local</string>
		<string>null</string>
		<string>resume</string>
		<string>return</string>
		<string>static</string>
		<string>switch</string>
		<string>this</string>
		<string>throw</string>
		<string>true</string>
		<string>try</string>
		<string>typeof</string>
		<string>weakref</string>
		<string>while</string>
		<string>yield</string>
	</array>
	<key>BBLMLanguageCode</key>
	<string>Squr</string>
	<key>BBLMLanguageDisplayName</key>
	<string>Squirrel</string>
	<key>BBLMPredefinedNameList</key>
	<array>
		<string>RAND_MAX</string>
		<string>_get</string>
		<string>_set</string>
		<string>_newslot</string>
		<string>_delsot</string>
		<string>_add</string>
		<string>_sub</string>
		<string>_mul</string>
		<string>_div</string>
		<string>_modulo</string>
		<string>_unm</string>
		<string>_typeof</string>
		<string>_cmp</string>
		<string>_call</string>
		<string>_cloned</string>
		<string>_nexti</string>
		<string>_tostring</string>
		<string>_inherited</string>
		<string>_newmember</string>
		<string>tochar</string>
		<string>tofloat</string>
		<string>tointeger</string>
		<string>tolower</string>
		<string>tostring</string>
		<string>toupper</string>
		<string>append</string>
		<string>apply</string>
		<string>clear</string>
		<string>extend</string>
		<string>filter</string>
		<string>find</string>
		<string>insert</string>
		<string>len</string>
		<string>map</string>
		<string>pop</string>
		<string>push</string>
		<string>reduce</string>
		<string>remove</string>
		<string>resize</string>
		<string>reverse</string>
		<string>slice</string>
		<string>sort</string>
		<string>top</string>
		<string>eos</string>
		<string>readblob</string>
		<string>readn</string>
		<string>readstring</string>
		<string>seek</string>
		<string>swap2</string>
		<string>swap4</string>
		<string>tell</string>
		<string>writen</string>
		<string>writeblob</string>
		<string>writestring</string>
		<string>acall</string>
		<string>bindenv</string>
		<string>call</string>
		<string>pacall</string>
		<string>pcall</string>
		<string>seek</string>
		<string>abs</string>
		<string>acos</string>
		<string>asin</string>
		<string>atan</string>
		<string>atan2</string>
		<string>ceil</string>
		<string>cos</string>
		<string>exp</string>
		<string>fabs</string>
		<string>floor</string>
		<string>log</string>
		<string>log10</string>
		<string>pow</string>
		<string>rand</string>
		<string>sin</string>
		<string>sqrt</string>
		<string>tan</string>
		<string>find</string>
		<string>assert</string>
		<string>castf2i</string>
		<string>casti2f</string>
		<string>date</string>
		<string>getroottable</string>
		<string>swap2</string>
		<string>swap4</string>
		<string>swapfloat</string>
		<string>time</string>
		<string>getdelegate</string>
		<string>rawdelete</string>
		<string>rawget</string>
		<string>rawin</string>
		<string>rawset</string>
		<string>setdelegate</string>
	</array>
	<key>BBLMPreferredFilenameExtension</key>
	<array>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>nut</string>
		</dict>
	</array>
	<key>BBLMScansFunctions</key>
	<true/>
	<key>BBLMSuffixMap</key>
	<array>
		<dict>
			<key>BBLMLanguageSuffix</key>
			<string>.nut</string>
		</dict>
	</array>
	<key>BBLMSupportsTextCompletion</key>
	<true/>
	<key>Language Features</key>
	<dict>
		<key>Close Block Comments</key>
		<string>*/</string>
		<key>Close Statement Blocks</key>
		<string>}</string>
		<key>Close Strings 1</key>
		<string>"</string>
		<key>Comment Pattern</key>
		<string>(?x: (?&gt; // .* $ ) | (?&gt; /\* (?s:.*?) (?: \*/ | \z ) ) )</string>
		<key>End-of-line Ends Strings 1</key>
		<false/>
		<key>Function Pattern</key>
		<string>(?x: (?P&lt;function&gt; (?P&lt;function_name&gt; (?&gt; _* [A-Za-z] [A-Za-z0-9_]* ) (?: (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* :: (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* ~? _* [A-Za-z] [A-Za-z0-9_]* )? ) (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* (?P&lt;parens&gt; \( (?: (?&gt; (?&gt; [^'"()]+ ) | (?: / (?![/*]) ) | (?P&gt;comment) | (?P&gt;string) | (?P&gt;parens) ) )* \) ) (?: (?&gt; (?&gt; \s+ ) | (?P&gt;comment) | (?P&gt;string) ) )* (?: : (?: (?&gt; (?&gt; [^'"{]+ ) | (?: / (?![/*]) ) | (?P&gt;comment) | (?P&gt;string) ) )* )? (?P&lt;braces&gt; { (?: (?&gt; (?&gt; [^'"{}]+ ) | (?: / (?![/*]) ) | (?P&gt;comment) | (?P&gt;string) | (?P&gt;braces) ) )* } ) ) )</string>
		<key>Identifier and Keyword Character Class</key>
		<string>0-9A-Z_a-z</string>
		<key>Open Block Comments</key>
		<string>/*</string>
		<key>Open Line Comments</key>
		<string>//</string>
		<key>Open Statement Blocks</key>
		<string>{</string>
		<key>Open Strings 1</key>
		<string>"</string>
		<key>Open Strings 2</key>
		<string>@"</string>
		<key>Skip Pattern</key>
		<string>(?x: (?&gt; (?P&gt;comment) | (?P&gt;string) ) )</string>
		<key>String Pattern</key>
		<string>(?x: ("(\\"|[^"\r]|\\\r)*") | ('(\\'|[^'\r]|\\\r)*') |(?s:&lt;&lt;-?(?P&lt;delim&gt;\w+).*?(?P=delim) ) )</string>
	</dict>
</dict>
</plist>
