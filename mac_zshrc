# smittytone's zsh profile (Mac)
#
# 1.0.6

# Options
setopt AUTO_CD
setopt CORRECT


# Autocompletion...
autoload -Uz compinit && compinit

# ...add case-insensitive path-completion for macOS
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:uppe>'

# ...homebrew
if [ type brew &>/dev/null ]; then
    FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi


# Prompts...
# ...left-hand side
PROMPT='%F{13}%d%f > '

# ...right-hand side: use for Git repos
# FROM 1.0.5 - use a git check to show status as well as repo namw
git_prompt() {
    is_dirty() {
        test -n "$(git status --porcelain --ignore-submodules)"
    }
    vcs_info
    local ref="$vcs_info_msg_0_"
    if [[ -n "$ref" ]]; then
        ref="%F{cyan}[${ref}]%f"
        if is_dirty; then
            ref="%F{yellow}%B!%b%f ${ref}"
        else
            ref="%F{green}%B#%b%f ${ref}"
        fi
        RPROMPT=$ref
    else
        RPROMPT=''
    fi
}

setopt prompt_subst
autoload -Uz add-zsh-hook
autoload -Uz vcs_info
add-zsh-hook precmd git_prompt
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes false
zstyle ':vcs_info:git*' formats '%b'
zstyle ':vcs_info:git*' actionformats '%F{cyan}[%b (%a)]%f'


# Aliases...
# ...list operations
alias ls='gls -lhF --group-directories-first --color=auto'
alias la='gls -lahF --group-directories-first --color=auto'

# ...tools
alias python='python3'
alias nano='/usr/local/bin/nano'
alias log='screen /dev/tty.usbserial-FTWHFLU9D 115200'


# List operation colour scheme
LS_COLORS=$LS_COLORS:'di=0;36:ln=0;93:ex=0;35:' ; export LS_COLORS


# Path variables...
# ...Git repos
export GIT="$HOME/Documents/GitHub"
export SCRIPTS="$GIT/scripts"
export PATH="$SCRIPTS:$PATH"

# ...homebrew
export PATH="/usr/local/sbin:$PATH"

# ...Rust
export PATH="$HOME/.cargo/bin:$PATH"


# FROM 1.0.5
# Functions...
# ...single command Git push
function gitsync() {
    git add .
    git commit -m "$1"
    git push
}


# FT232H support...
# ...report if device is connected and export required variabls
unsetopt NOMATCH
if [ -e /dev/cu.usbserial-* ]; then
    export BLINKA_FT232H=1
    echo "FT232H connected"
fi


# MCP2221 support...
# ...report if device is connected and export required variabls
if [ -e /dev/cu.usbmodem* ]; then
    export BLINKA_MCP2221=1
    echo "MCP2221 connected"
fi


# Display which shell is use
echo "Running Shell from $SHELL"
